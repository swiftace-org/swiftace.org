# Clean and Performant HTML in Pure JavaScript

The primary function of web applications is to generate HTML. This generation can be done on a server (for serving full HTML pages), or within a browser (for rendering UI elements dynamically).

A web app typically generates  HTML on a server and sends it to a user's browser, which then renders it as a web page.



Here's what it looks like:

```javascript
import jshtml from "./jshtml.js";

// Define your page/app as a JavaScript function
function App() {
  const title = "My JSHTML App";
  const items = ["Apple", "Banana", "Orange"];

  // Use arrays & objects to create HTML elements
  return [
    `html`, 
    { lang: "en" }, 
    [`head`, [`title`, title]], 
    [
      `body`,
      { class: "container" },
      [Header, { title }], // Use custom components
      [
        `main`,
        [`h2`, "Favorite Fruits"],
        [`ul`, { children: items.map((item) => [`li`, item]) }],
      ],
      [Footer, [`p`, "Visit our website for more."]],
    ],
  ];
}

// Components can accept props
function Header({ title }) {
  return [`header`, [`h1`, { class: "title" }, title]];
}

// Components can accept children
function Footer({ children }) {
  return [`footer`, [`p`, "© 2024 JSHTML"], ...children];
}

// Render to a spec-compliant HTML string
const html = jshtml.renderToHtml(App());
console.log(html);
```

This will output clean, spec-compliant HTML (without any spaces or indentation):

```html
<html lang="en">
  <head>
    <title>My JSHTML App</title>
  </head>
  <body class="container">
    <header>
      <h1 class="title">My JSHTML App</h1>
    </header>
    <main>
      <h2>Favorite Fruits</h2>
      <ul>
        <li>Apple</li>
        <li>Banana</li>
        <li>Orange</li>
      </ul>
    </main>
    <footer>
      <p>© 2024 JSHTML</p>
      <p>Visit our website for more.</p>
    </footer>
  </body>
</html>
```